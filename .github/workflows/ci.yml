name: ci

on:
  push:
  pull_request:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build -j
      - name: Test (full suite)
        run: cd build && ctest --output-on-failure --parallel $(nproc)
      - name: Analytic wire regression test
        run: cd build && ctest --output-on-failure -R analytic_wire
      - name: Install visualization dependencies
        run: python3 -m pip install --user numpy matplotlib vtk
      - name: Prepare artifact directories
        run: |
          rm -rf outputs ci_artifacts
          mkdir -p outputs ci_artifacts
      - name: Collect regression accuracy reports
        run: |
          set -euo pipefail
          ./build/analytic_wire_test 2>&1 | tee ci_artifacts/analytic_wire_test.txt
          ./build/two_wire_cancel_test 2>&1 | tee ci_artifacts/two_wire_cancel_test.txt
          ./build/line_current_interface_test 2>&1 | tee ci_artifacts/line_current_interface_test.txt
          ./build/magnet_strip_test 2>&1 | tee ci_artifacts/magnet_strip_test.txt
          ./build/probe_output_test 2>&1 | tee ci_artifacts/probe_output_test.txt
          ./build/torque_validation_test 2>&1 | tee ci_artifacts/torque_validation_test.txt
          ./build/back_emf_probe_test 2>&1 | tee ci_artifacts/back_emf_probe_test.txt
          ./build/rotor_ripple_test 2>&1 | tee ci_artifacts/rotor_ripple_test.txt
          {
            echo "# Regression accuracy summary"
            echo
            for report in \
              ci_artifacts/analytic_wire_test.txt \
              ci_artifacts/two_wire_cancel_test.txt \
              ci_artifacts/line_current_interface_test.txt \
              ci_artifacts/magnet_strip_test.txt \
              ci_artifacts/probe_output_test.txt \
              ci_artifacts/torque_validation_test.txt \
              ci_artifacts/back_emf_probe_test.txt \
              ci_artifacts/rotor_ripple_test.txt; do
              name=$(basename "${report%.txt}")
              echo "## ${name}"
              cat "$report"
              echo
            done
          } > ci_artifacts/test_accuracy_report.txt
      - name: Solve scenarios for field maps
        run: |
          set -euo pipefail
          ./build/motor_sim --scenario inputs/two_wire_cancel.json --solve --outputs all
          ./build/motor_sim --scenario inputs/line_current_interface.json --solve --outputs all
          ./build/motor_sim --scenario inputs/iron_ring_demo.json --solve --outputs all --tol 5e-6 --max-iters 40000
          ./build/motor_sim --scenario inputs/tests/magnet_strip_test.json --solve --outputs all
          ./build/motor_sim --scenario inputs/tests/rotor_ripple_test.json --solve --outputs all --parallel-frames --max-iters 40000 --tol 2.5e-6
      - name: Verify VTK export
        run: python3 python/verify_vtk.py outputs/rotor_ripple_field_frame_000.vti
      - name: Three-phase stator rotating-field demo
        env:
          MPLBACKEND: Agg
        run: |
          set -euo pipefail
          python3 python/gen_three_phase_stator.py --profile ci --out inputs/three_phase_stator_ci.json
          ./build/motor_sim --scenario inputs/three_phase_stator_ci.json --solve --parallel-frames --vtk-series outputs/three_phase_ci.pvd --tol 5e-6 --max-iters 40000
          python3 python/check_three_phase_field.py --pvd outputs/three_phase_ci.pvd --scenario inputs/three_phase_stator_ci.json
          python3 python/animate_three_phase.py --pvd outputs/three_phase_ci.pvd --scenario inputs/three_phase_stator_ci.json --save ci_artifacts/three_phase_demo.gif --frame-png ci_artifacts/three_phase_demo.png
          cp outputs/three_phase_frame_frame_000.vti ci_artifacts/
          cp outputs/three_phase_ci.pvd ci_artifacts/
          cp outputs/bore_angle.csv ci_artifacts/
          cp outputs/three_phase_outlines.vtp ci_artifacts/
      - name: Render visualisations
        env:
          MPLBACKEND: Agg
        run: |
          set -euo pipefail
          python3 python/visualize_scenario_field.py \
            --scenario inputs/two_wire_cancel.json \
            --field-map outputs/two_wire_field_map.csv \
            --save ci_artifacts/two_wire_field.png \
            --draw-boundaries \
            --streamlines
          python3 python/visualize_scenario_field.py \
            --scenario inputs/line_current_interface.json \
            --field-map outputs/interface_field.csv \
            --save ci_artifacts/line_current_interface_field.png \
            --draw-boundaries \
            --streamlines \
            --overlay-analytic interface \
            --analytic-contours 10
          python3 python/visualize_scenario_field.py \
            --scenario inputs/iron_ring_demo.json \
            --field-map outputs/iron_ring_field.csv \
            --save ci_artifacts/iron_ring_field.png \
            --draw-boundaries \
            --streamlines \
            --color-scale log
          python3 python/visualize_scenario_field.py \
            --scenario inputs/tests/magnet_strip_test.json \
            --field-map outputs/magnet_strip_field.csv \
            --save ci_artifacts/magnet_strip_field.png \
            --draw-boundaries \
            --streamlines \
            --color-scale log
          python3 python/visualize_scenario_field.py \
            --scenario inputs/tests/rotor_ripple_test.json \
            --field-map outputs/rotor_ripple_field_frame_000.csv \
            --save ci_artifacts/rotor_ripple_frame0.png \
            --outline-vtp outputs/rotor_ripple_field_frame_000_outlines.vtp \
            --draw-boundaries \
            --streamlines \
            --color-scale log \
            --vector-mode log
          python3 python/visualize_scenario_field.py \
            --scenario inputs/tests/rotor_ripple_test.json \
            --field-map outputs/rotor_ripple_field_frame_002.csv \
            --save ci_artifacts/rotor_ripple_frame2.png \
            --outline-vtp outputs/rotor_ripple_field_frame_002_outlines.vtp \
            --draw-boundaries \
            --streamlines \
            --color-scale log \
            --vector-mode log
          python3 python/visualize_wire.py \
            --csv outputs/validation_wire_line.csv \
            --save ci_artifacts/analytic_wire_line.png \
            --no-show
      - name: Collect solver artifacts
        run: |
          set -euo pipefail
          shopt -s nullglob
          for file in outputs/*.csv outputs/*.vti outputs/*_outlines.vtp outputs/*_outlines_labels.csv; do
            cp "$file" ci_artifacts/
          done
      - name: Upload simulation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: solver-artifacts
          path: ci_artifacts/
